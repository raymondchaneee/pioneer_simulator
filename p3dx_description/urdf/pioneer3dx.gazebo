<?xml version="1.0"?>

<!-- 
This is the gazebo urdf description of a Pioneer 3DX.
Copyright (C) 2013 Rafael Berkvens rafael.berkvens@uantwerpen.be

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
 -->

<robot xmlns:xacro="http://ros.org/wiki/xacro">

  <!-- properties (constants) -->
  <xacro:property name="ns" value="p3dx" />

  <!-- ros_control plugin -->
  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/${ns}</robotNamespace>
      <legacyModeNS>true</legacyModeNS>
    </plugin>
  </gazebo>

  <!-- base_link -->
  <gazebo reference="base_link">
    <material>Gazebo/Red</material>
  </gazebo>

  <!-- top_plate -->
  <gazebo reference="top_plate">
    <material>Gazebo/Black</material>
  </gazebo>
  
  <!-- swivel -->
  <gazebo reference="swivel">
    <material>Gazebo/Grey</material>
  </gazebo>
  
  <!-- center_hubcap -->
  <gazebo reference="center_hubcap">
    <material>Gazebo/Yellow</material>
  </gazebo>
  
  <!-- center_wheel -->
  <gazebo reference="center_wheel">
    <material>Gazebo/Black</material>
    <!--mu1>10.0</mu1>
    <mu2>10.0</mu2-->
    <mu1>0.5</mu1>
    <mu2>50.0</mu2>
    <kp>1000000.0</kp>
    <kd>1.0</kd>
  </gazebo>

  <!-- stick_body -->
  <gazebo reference="stick_body">
    <material>Gazebo/White</material>
  </gazebo>

  <!-- low camera -->
  <gazebo reference="low_camera_link">
    <material>Gazebo/Black</material>
  </gazebo>

  <!-- high camera -->
  <gazebo reference="high_camera_link">
    <material>Gazebo/Black</material>
  </gazebo>

  <!-- rgbd camera -->
  <gazebo reference="rgbd_camera_link">
    <material>Gazebo/Black</material>
  </gazebo>

  <!-- front_sonar -->  
  <gazebo reference="front_sonar">
    <material value="Gazebo/Yellow" />
  </gazebo>

  <!-- laser -->  
  <gazebo reference="laser">
    <material value="Gazebo/Black" />
  </gazebo>

  <!-- differential drive -->
	<gazebo>
		<plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
			<alwaysOn>true</alwaysOn>
    			<legacyMode>true</legacyMode>
			<updateRate>100</updateRate>
    			<robotNamespace>/</robotNamespace>
			<leftJoint>base_right_wheel_joint</leftJoint>
			<rightJoint>base_left_wheel_joint</rightJoint>
			<wheelSeparation>0.39</wheelSeparation>
			<wheelDiameter>0.15</wheelDiameter>
			<torque>5</torque>
			<commandTopic>RosAria/cmd_vel</commandTopic>
			<odometryTopic>RosAria/pose</odometryTopic>
			<odometryFrame>odom</odometryFrame>
			<robotBaseFrame>base_link</robotBaseFrame>
    			<odometrySource>world</odometrySource>
    			<publishTf>1</publishTf>
    			<rosDebugLevel>na</rosDebugLevel>
    			<wheelAcceleration>0.3</wheelAcceleration>
    			<wheelTorque>5</wheelTorque>
    			<publishWheelTF>false</publishWheelTF>
    			<publishOdomTF>true</publishOdomTF>
    			<publishWheelJointState>true</publishWheelJointState>
		</plugin>
	</gazebo>

  <!-- ground truth -->
	<gazebo>
		<plugin name="p3d_base_controller" filename="libgazebo_ros_p3d.so">
			<alwaysOn>true</alwaysOn>
			<updateRate>100.0</updateRate>
			<bodyName>base_link</bodyName>
			<topicName>${ns}/base_pose_ground_truth</topicName>
			<gaussianNoise>0.1</gaussianNoise>
			<frameName>map</frameName>
			<!-- initialize odometry for fake localization -->
			<xyzOffsets>0 0 0</xyzOffsets>
			<rpyOffsets>0 0 0</rpyOffsets>
		</plugin>
	</gazebo>
	
	<!-- lms100 -->
	<gazebo reference="laser">
		<sensor type="ray" name="head_hokuyo_sensor">
			<pose>0 0 0 0 0 0</pose>
			<visualize>true</visualize>
			<update_rate>50</update_rate>
			<ray>
				<scan>
					<horizontal>
						<samples>360</samples>
						<resolution>1</resolution>
						<min_angle>-1.570796</min_angle>
						<max_angle>1.570796</max_angle>
					</horizontal>
				</scan>
				<range>
					<min>0.10</min>
					<max>10.0</max>
					<resolution>0.01</resolution>
				</range>
				<noise>
					<type>gaussian</type>
					<!-- Noise parameters based on published spec for Hokuyo laser achieving 
						"+-30mm" accuracy at range < 10m. A mean of 0.0m and stddev of 0.01m will 
						put 99.7% of samples within 0.03m of the true reading. -->
					<mean>0.0</mean>
					<stddev>0.01</stddev>
				</noise>
			</ray>
			<plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
				<topicName>scan</topicName>
				<frameName>laser</frameName>
			</plugin>
		</sensor>
	</gazebo>

    <!-- low camera -->
  <gazebo reference="low_camera_link">
    <sensor type="camera" name="low_camera">
      <update_rate>30.0</update_rate>
      <camera name="low_camera">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>1280</width>
          <height>720</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="low_camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>pioneer/low_camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>low_camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

    <!-- high camera 1-->
  <gazebo reference="high_camera1_link">
    <sensor type="camera" name="high_camera1">
      <update_rate>30.0</update_rate>
      <camera name="high_camera1">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>1280</width>
          <height>720</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="high_camera1_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>pioneer/high_camera1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>high_camera1_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

    <!-- high camera 2 -->
  <gazebo reference="high_camera2_link">
    <sensor type="camera" name="high_camera2">
      <update_rate>30.0</update_rate>
      <camera name="high_camera2">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>1280</width>
          <height>720</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="high_camera2_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>pioneer/high_camera2</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>high_camera2_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

    <!-- high camera 3 -->
  <gazebo reference="high_camera3_link">
    <sensor type="camera" name="high_camera3">
      <update_rate>30.0</update_rate>
      <camera name="high_camera3">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>1280</width>
          <height>720</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="high_camera3_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>pioneer/high_camera3</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>high_camera3_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

    <!-- high camera 4 -->
  <gazebo reference="high_camera4_link">
    <sensor type="camera" name="high_camera4">
      <update_rate>30.0</update_rate>
      <camera name="high_camera4">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>1280</width>
          <height>720</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="high_camera4_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>pioneer/high_camera4</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>high_camera4_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

    <!-- high camera 5 -->
  <gazebo reference="high_camera5_link">
    <sensor type="camera" name="high_camera5">
      <update_rate>30.0</update_rate>
      <camera name="high_camera5">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>1280</width>
          <height>720</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="high_camera5_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>pioneer/high_camera5</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>high_camera5_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

    <!-- high camera 6 -->
  <gazebo reference="high_camera6_link">
    <sensor type="camera" name="high_camera6">
      <update_rate>30.0</update_rate>
      <camera name="high_camera6">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>1280</width>
          <height>720</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="high_camera6_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>pioneer/high_camera6</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>high_camera6_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

    <!-- rgbd camera -->
  <gazebo reference="rgbd_camera_link">
      <sensor name="rgbd_camera" type="depth">
        <camera>
          <horizontal_fov>1.047</horizontal_fov>
          <image>
            <width>320</width>
            <height>240</height>
          </image>
          <clip>
            <near>0.1</near>
            <far>100</far>
          </clip>
        </camera>
        <always_on>1</always_on>
        <update_rate>30</update_rate>
        <visualize>true</visualize>
  	<plugin name="rgbd_camera_controller" filename="libgazebo_ros_openni_kinect.so">
	    <baseline>0.2</baseline>
	    <alwaysOn>true</alwaysOn>
	    <updateRate>1.0</updateRate>
	    <cameraName>pioneer/rgbd_camera</cameraName>
	    <imageTopicName>/rgbd_camera/rgb/image_raw</imageTopicName>
	    <cameraInfoTopicName>/rgbd_camera/rgb/camera_info</cameraInfoTopicName>
	    <depthImageTopicName>/rgbd_camera/depth/image_raw</depthImageTopicName>
	    <depthImageInfoTopicName>/rgbd_camera/depth/camera_info</depthImageInfoTopicName>
	    <pointCloudTopicName>/rgbd_camera/depth/points</pointCloudTopicName>
	    <frameName>rgbd_camera_depth_link</frameName>
	    <pointCloudCutoff>0.5</pointCloudCutoff>
	    <distortionK1>0.00000001</distortionK1>
	    <distortionK2>0.00000001</distortionK2>
	    <distortionK3>0.00000001</distortionK3>
	    <distortionT1>0.00000001</distortionT1>
	    <distortionT2>0.00000001</distortionT2>
	    <CxPrime>0</CxPrime>
	    <Cx>0</Cx>
	    <Cy>0</Cy>
	    <focalLength>0</focalLength>
	    <hackBaseline>0</hackBaseline>
	  </plugin>
      </sensor>
  </gazebo>

</robot>
